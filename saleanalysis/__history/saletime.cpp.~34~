//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "saletime.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma link "RzButton"
#pragma link "RzPanel"
#pragma link "RzRadChk"
#pragma link "DBGridEh"
#pragma link "GridsEh"
#pragma resource "*.dfm"
Tfrmsaletime *frmsaletime;
//---------------------------------------------------------------------------
__fastcall Tfrmsaletime::Tfrmsaletime(TComponent* Owner,TADOConnection *cn,int stgid)
	: TForm(Owner)
{
  query->Connection = cn;
  dtpstart->Date = Date();
  dtpend->Date = Date();
  TADOQuery * aq;
  String sql;
  aq = new TADOQuery(this);
  aq->Connection = cn;
  aq->Close();
  aq->SQL->Clear();
  aq->SQL->Add("select * from sys_bsset where name ='retailxiaoshudian'");
  aq->Open();
  retaiformat =  "￥###,###,##" + aq->FieldByName("bk")->AsAnsiString ;
  aq->Close();
  aq->SQL->Clear();
  aq->SQL->Add("select * from sys_bsset where name ='salexiaoshudian'");
  aq->Open();
  saleformat =  "￥###,###,##" + aq->FieldByName("bk")->AsAnsiString ;

  sql = "select ID,Name  from SYS_StorageInfo";
  aq->Close();
  aq->SQL->Clear();
  aq->SQL->Add(sql);
  aq->Open();
  while (!aq->Eof)
  {
		cbstorage->AddItem(aq->FieldByName("Name")->AsString,(TObject*)aq->FieldByName("ID")->AsInteger);
		aq->Next();
  }
  cbstorage->ItemIndex = cbstorage->Items->IndexOfObject((TObject*)stgid);
  sql = "select Master from SYS_StorageInfo where id = " + IntToStr(stgid);
  aq->Close();
  aq->SQL->Clear();
  aq->SQL->Add(sql);
  aq->Open();
  if (aq->FieldByName("Master")->AsBoolean ) {
		cbstorage->Enabled = true;
		chstorage->Enabled = true;
  }
  else
  {
  		cbstorage->Enabled = false;
		chstorage->Enabled = false;
  }
// DBGridEh2->Columns->Items[0]->Visible = false;


  ShowMessage(IntToStr(dg->Columns->Count));
  delete aq;
}
//---------------------------------------------------------------------------
void __fastcall Tfrmsaletime::BtnViewClick(TObject *Sender)
{
	AnsiString  sqlwhere,sql;
	sql = " exec [USP_BS_Saletime] ";
	if (chstorage->Checked ) {
		int fstgid;
		try {
			fstgid = (int)cbstorage->Items->Objects[cbstorage->ItemIndex];
		} catch (...) {

                      ShowMsg(Handle ,"请选择正确的店号！",3);
			return;
		}
		sql = sql + IntToStr(fstgid);
	}
	else
	{
		sql = sql + "null";
	}
	if (cbstart->Checked) {
		sql = sql + ",'" + DateToStr(dtpstart->Date) + "'";
	}
	else
	{
		sql = sql + ",null";
	}
	if (cbend->Checked) {
		sql = sql + ",'" + DateToStr(dtpend->Date) + "'";
	}
	else
	{
		sql = sql + ",null";
	}
	query->Close();
	query->SQL->Clear();
	query->SQL->Add(sql);
	query->Open();
          // if (!searchPower) {
          // dbgrdByNtHeader->Columns->Items[0]->Visible = false;
               // DBGridEh1->DataSource->DataSet->RecordCount;
            //   DBGridEh1->Visible = false;
   
         // dg->Columns->Items[0]->Visible = false;
        // dg->Columns->Items[5]->Visible = false;
       //   dg->Columns->Items[9]->Visible = false;
       //  dg->Columns->Items[10]->Visible = false;
       //  dg->Columns->Items[13]->Visible = false;
      //  dg->Columns->Items[14]->Visible = false;

 // }
}
//---------------------------------------------------------------------------
void __fastcall Tfrmsaletime::BtnExitClick(TObject *Sender)
{
	Close();
}
//---------------------------------------------------------------------------

void __fastcall Tfrmsaletime::BtnExportClick(TObject *Sender)
{
return;
	if (query->Active && query->RecordCount > 0) {
		DbgridToExcel(dg);
	}
}
//---------------------------------------------------------------------------

//Excel导出函数
bool __fastcall Tfrmsaletime::DbgridToExcel(TDBGridEh* dbg)
{
	if (dbg->DataSource ->DataSet->IsEmpty() ) {
        return false;
	}
	AnsiString temptext,path;

	savedlg->FileName = this->Caption;
	if (savedlg->Execute())
	{
		String DBPath,Name;
		DBPath = ExtractFilePath(savedlg->FileName .c_str()  );
		Name = ExtractFileName(savedlg->FileName .c_str() );
		DBPath = DBPath + Name + ".csv";
		path =  DBPath;
	}
	else
	{
		return false;
	}
	int  iFileHandle;
	int  iFileLength;
	if(FileExists(path))
	   if (DeleteFileA(path))
			iFileHandle = FileCreate(path.c_str());
	   else
			return false;
	else
		iFileHandle = FileCreate(path.c_str());

	for(int q=0;q<dbg->FieldCount ;++q)
	{
		if (dbg->Columns->Items[q]->Visible == true) {
			temptext = temptext + dbg->Columns ->Items [q]->Title ->Caption + ",";
		}
	}
	iFileLength   =   FileSeek(iFileHandle,0,2);
	FileWrite(iFileHandle,temptext.c_str() ,temptext.Length());

	dbg->DataSource ->DataSet->DisableControls();
	dbg->DataSource ->DataSet ->First();
	while(!dbg->DataSource ->DataSet->Eof)
	{
		temptext = "\n";
		for(int j=1;j<dbg->Columns ->Count+1  ;j++)
		{
			if (dbg->Columns->Items[j-1]->Visible == true) {
				if (dbg->Columns ->Items [j-1]->FieldName == "ISBN") {
					if (dbg->DataSource ->DataSet ->FieldByName(dbg->Columns ->Items [j-1]->FieldName )->AsAnsiString != "") {
						temptext = temptext + "'" + dbg->DataSource ->DataSet ->FieldByName(dbg->Columns ->Items [j-1]->FieldName )->AsAnsiString + ",";
					}
					else
					{
                    	temptext = temptext + dbg->DataSource ->DataSet ->FieldByName(dbg->Columns ->Items [j-1]->FieldName )->AsAnsiString + ",";
					}
				}
				else if (dbg->Columns ->Items [j-1]->FieldName == "BookName") {
					AnsiString bookname;
					int len;
					bookname = dbg->DataSource ->DataSet ->FieldByName(dbg->Columns ->Items [j-1]->FieldName )->AsAnsiString;
					bookname = StringReplace(bookname , ",",".",TReplaceFlags()<<rfReplaceAll);
					temptext = temptext + bookname + ",";
				}
				else
				{
					temptext = temptext + dbg->DataSource ->DataSet ->FieldByName(dbg->Columns ->Items [j-1]->FieldName )->AsAnsiString + ",";
				}
			}
		}
		iFileLength   =   FileSeek(iFileHandle,0,2);
		FileWrite(iFileHandle,temptext.c_str() ,temptext.Length());
		dbg->DataSource ->DataSet ->Next() ;
	}
	dbg->DataSource ->DataSet->EnableControls();

	temptext = "\n";
	for(int q=0;q<dbg->FieldCount ;++q)
	{
		if (dbg->Columns->Items[q]->Visible == true) {
			temptext = temptext + dbg->Columns ->Items[q]->Footer->Value + ",";
		}
	}
	FileWrite(iFileHandle,temptext.c_str() ,temptext.Length());

	FileClose(iFileHandle);


         ShowMsg(Handle ,"导出完毕！",3);
	return false;
}
//---------------------------------------------------------------------------

void __fastcall Tfrmsaletime::FormClose(TObject *Sender, TCloseAction &Action)
{
	Action = caFree ;
}
//---------------------------------------------------------------------------

void __fastcall Tfrmsaletime::FormKeyDown(TObject *Sender, WORD &Key, TShiftState Shift)

{
	if (Key == VK_F1) {
		BtnView->Click();
	}
	if (Key == VK_F10) {
		BtnPrint->Click();
	}
	if (Key == VK_F8) {
		BtnExport->Click();
	}

	if (Shift.Contains(ssCtrl)&& Key ==90) {
		WindowState = wsNormal  ;
	}
	if (Shift.Contains(ssCtrl)&& Key ==81  ) {
		BtnExit->Click();
	}
	if (Shift.Contains(ssCtrl)&& Key == 78 ) {
		BtnAlignBottom->Click();
	}
}
//---------------------------------------------------------------------------

void __fastcall Tfrmsaletime::BtnAlignBottomClick(TObject *Sender)
{
	WindowState = wsMinimized   ;
}
//---------------------------------------------------------------------------

void __fastcall Tfrmsaletime::dtpstartChange(TObject *Sender)
{
	cbstart->Checked = true;
}
//---------------------------------------------------------------------------

void __fastcall Tfrmsaletime::dtpendChange(TObject *Sender)
{
	cbend->Checked = true;
}
//---------------------------------------------------------------------------

void Tfrmsaletime::init()
{

  }
//---------------------------------------------------------------------------

