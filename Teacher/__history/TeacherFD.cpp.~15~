//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "TeacherFD.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TfrmteacherFD *frmteacherFD;
//---------------------------------------------------------------------------
__fastcall TfrmteacherFD::TfrmteacherFD(TComponent* Owner)
	: TForm(Owner)
{
 m_catalogSearchMode = 1;
}
void TfrmStockAdjust::init(LandInfo *li)
{
   	fcon  = li->con ;
	aq->Connection = fcon;
	UserID = li->userID ;
	Stgid = li->storageID ;


}
//---------------------------------------------------------------------------
void __fastcall TfrmteacherFD::edtCatalogKeyPress(TObject *Sender, wchar_t &Key)
{
	if (Key == '\'') {
		Key = NULL;
	}
	if (m_catalogSearchMode == 6) {
		if ((Key < '0' || Key > '9') && (Key != '\b') && (Key != '.') && (Key != '\r') ) {
			Key = NULL;
		}
	}
	int results;
   	if (Key == VK_RETURN)
	{
		if (edtCatalog->Text == "") {
			ChangeCatalogSearchMode();
			return;
		}
		if (m_catalogSearchMode==6) {
			FLOAT price;
			try
			{
				price = StrToFloat(edtCatalog->Text);
			}
			catch(...)
			{

                                ShowMsg(Handle ,"请输入正确的价格！",3);
				return ;
			}
		}

		TfrmSelectCatalog* frm = new TfrmSelectCatalog(Application,fcon);
		LandInfo li;
		li.app = Application;
		li.con = fcon;
		li.userID = UserID;
		li.storageID = Stgid;
		frm->Init(&li);
		frm->DoModalType = 9;
		frm->StockAdjust  = this;
		frm->SetSearchMode(m_catalogSearchMode, edtCatalog->Text);
		frm->SelectAll = false;
		frm->QryBkInfo();
		if (frm->findbooks == 3) {
			results= frm->ShowModal();
		}else if (frm->findbooks==1) {
			results = 1;
		}else if ((frm->findbooks==0)||(frm->findbooks==-1)) {
			results = -1 ;
		}

		int bkinfoid;
		if (mrOk == results)
		{
			if (frm->SelectAll) {
				 for (int i = 0; i < frm->lengthint  ; i++) {
					AddNote(frm->SupplierID[i],frm->BkcatalogiD[i],frm->stkbkid[i],frm->skAmount[i]);
				 }
			}else
			{
			   frm->GetSelectResult(bkinfoid,catalogID);
			   AddNote(supplierID,catalogID,frm->BKinfoid,frm->Amount);
			   editadjust->SetFocus();
			}
		}

		delete frm;
		edtCatalog->Text = "";
	}
}
void TfrmteacherFD::ChangeCatalogSearchMode()
{
    	if (m_catalogSearchMode==3) {
		m_catalogSearchMode=5;
	}else
	{
		m_catalogSearchMode++;
	}
	if (m_catalogSearchMode >= 7)
	{
		m_catalogSearchMode = 1;
	}

	switch (m_catalogSearchMode)
	{
	case 1:
		edtCatalog->MaxLength = 15;
		lblCatalog->Caption = "书号";
		break;
	case 2:
		edtCatalog->MaxLength = 0;
		lblCatalog->Caption = "自编码";
		break;
	case 3:
		edtCatalog->MaxLength = 0;
		lblCatalog->Caption = "书名";
		break;
	case 5:
		edtCatalog->MaxLength = 0;
		lblCatalog->Caption = "作者";
		break;
	case 6:
		edtCatalog->MaxLength = 0;
		lblCatalog->Caption = "定价";
		break;
	default:
		break;
	}


}
//---------------------------------------------------------------------------
void __fastcall TfrmteacherFD::N1Click(TObject *Sender)
{
    lblCatalog->Caption = "书 号";
	m_catalogSearchMode=1;
}
//---------------------------------------------------------------------------
void __fastcall TfrmteacherFD::N2Click(TObject *Sender)
{
	lblCatalog->Caption = "自编码";
	m_catalogSearchMode=2;
}
//---------------------------------------------------------------------------
void __fastcall TfrmteacherFD::N3Click(TObject *Sender)
{
	lblCatalog->Caption = "书名";
	m_catalogSearchMode=3;
}
//---------------------------------------------------------------------------
void __fastcall TfrmteacherFD::N6Click(TObject *Sender)
{
	lblCatalog->Caption = "定价";
	m_catalogSearchMode=6;
}
//---------------------------------------------------------------------------
void __fastcall TfrmteacherFD::N4Click(TObject *Sender)
{
	lblCatalog->Caption = "作者";
	m_catalogSearchMode=5;
}
//---------------------------------------------------------------------------
 void TfrmteacherFD::AddNote(int supplierID,int CatalogId,int bkinfoid,int amount)
 {




 }
bool TfrmteacherFD::DbgridToExcel(TDBGrid* dbg)
 {

 }
void TfrmteacherFD::Deletenote()
{


}
void TfrmteacherFD::ExecSQL(AnsiString sql)
{





}
void TfrmteacherFD::LoadData()
{
   AnsiString sql;
   sql:="select id,name from BS_TeacherFD";
   aq->Close();
   aq->SQL->Clear();
   aq->SQL->Add(sql);
   aq->Open();

   while not aq->



}
